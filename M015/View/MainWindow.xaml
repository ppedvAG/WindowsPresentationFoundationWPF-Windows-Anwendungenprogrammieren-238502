<Window x:Class="M015.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:vm="clr-namespace:M015.ViewModel"
        xmlns:local="clr-namespace:M015"
        Title="MainWindow" Height="450" Width="300"
		WindowStartupLocation="CenterScreen"
		Topmost="True">
	<Window.DataContext>
		<vm:MainWindowViewModel/>
	</Window.DataContext>
    <StackPanel>
		<!--MVVM-->
		<!--Trennung des Projekts in drei Teile: Model, View, View-Model-->
		<!--Model: Datenklassen, normale C# Klassen die keine Logik ausführen (nur Daten halten)-->
		<!--View: GUI Code (ausschließlich XAML)-->
		<!--View-Model: Backend Code, Business Logic, verbindet Model und View-->
		
		<!--Beim View-Model wird eine normale C# Klasse verwendet, welche die Window.xaml.cs Datei ersetzt-->
		<!--Diese Klasse wird als DataContext eingesetzt bei dem entsprechenden Window-->
		<TextBlock Text="{Binding DiePerson.Vorname}"/>
		<TextBlock Text="{Binding DiePerson.Nachname}"/>
		<DatePicker SelectedDate="{Binding DiePerson.GebDat}"/>
		<CheckBox IsChecked="{Binding DiePerson.Verheiratet}"/>
		<TextBlock Text="{Binding DiePerson.Lieblingsfarbe}"/>
		
		<!--Aufgabenstellung: Button, welcher eine Zusammenfassung über die Person erzeugt-->
		<Button Content="Person ausgeben"
				Command="{Binding PrintPerson}"/>
		
		<!--Schritt 0: Ordnerstruktur herstellen-->
		<!--Schritt 1: Eine Klasse für jedes Window anlegen und diese als DataContext setzen-->
		<!--Schritt 2: Alle Events durch Commands ersetzen-->
	</StackPanel>
</Window>
