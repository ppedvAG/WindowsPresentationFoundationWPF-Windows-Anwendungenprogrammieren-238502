<Window x:Class="M000.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        xmlns:local="clr-namespace:M000"
		xmlns:conv="clr-namespace:M000.Converter"
		xmlns:valid="clr-namespace:M000.Validation"
        Title="Personendialog"
		Height="250"
		Width="300"
		DataContext="{Binding RelativeSource={RelativeSource Self}}"
		Topmost="True"
		WindowStartupLocation="CenterScreen"
		SizeToContent="Height"
		Style="{StaticResource WindowStyle}">
	<!--<Window.DataContext>
		<local:Person/>
	</Window.DataContext>-->
	<Window.Resources>
		<conv:GenderConverter x:Key="GC"/>
		<conv:ColorToBrushConverter x:Key="CBC"/>

		<!--<ObjectDataProvider x:Key="Odp_Colors" MethodName="GetType" ObjectType="{x:Type sys:Type}">
			<ObjectDataProvider.MethodParameters>
				<sys:String>
					System.Windows.Media.Colors, PresentationCore, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
				</sys:String>
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>
		<ObjectDataProvider  x:Key="Odp_ColorsProperties" MethodName="GetProperties" ObjectInstance="{StaticResource Odp_Colors}"/>-->

		<ControlTemplate x:Key="ErrorTemp">
			<StackPanel>
				<!--AdornedElementPlaceholder: Gibt uns Zugriff, auf das gerade validierte Element (hier TextBox)-->
				<Border BorderBrush="Red" BorderThickness="2">
					<AdornedElementPlaceholder Name="AEP"/>
				</Border>
				<Popup Placement="Mouse"
			   IsOpen="{Binding ElementName=AEP, Path=AdornedElement.IsMouseOver, Mode=OneWay}">
					<!--Aus dem AEP können wir jetzt die Fehlermeldung entnehmen-->
					<Border BorderBrush="Black" BorderThickness="3">
						<TextBlock Text="{Binding ElementName=AEP, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
					   Background="Red" Foreground="White" Padding="5"/>
					</Border>
				</Popup>
			</StackPanel>
		</ControlTemplate>

		<Style TargetType="TextBox">
			<Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemp}"/>
		</Style>

		<valid:ValidationRuleCollection x:Key="TextValidations">
			<valid:LengthValidation ValidatesOnTargetUpdated="True"/>
			<valid:LetterValidation ValidatesOnTargetUpdated="True"/>
		</valid:ValidationRuleCollection>
		<valid:DateValidation x:Key="DateValid" ValidatesOnTargetUpdated="True"/>
		<valid:ColorValidation x:Key="ColorValid" ValidatesOnTargetUpdated="True"/>
	</Window.Resources>
	
	<!--<Grid Margin="5, 0, 5, 5">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
		</Grid.RowDefinitions>
		<TextBlock Text="Vorname: " Margin="0, 5, 0, 0"/>
		<TextBox Grid.Column="1" Margin="0, 5, 0, 0"/>
		<TextBlock Text="Nachname: " Grid.Row="1" Margin="0, 5, 0, 0"/>
		<TextBox Grid.Row="1" Grid.Column="1" Margin="0, 5, 0, 0"/>
		<TextBlock Text="Geburtsdatum: " Grid.Row="2" Margin="0, 5, 0, 0"/>
		<DatePicker Grid.Row="2" Grid.Column="1" Margin="0, 5, 0, 0"/>
		<TextBlock Text="Verheiratet: " Grid.Row="3" Margin="0, 5, 0, 0"/>
		<CheckBox Grid.Row="3" Grid.Column="1" Margin="0, 5, 0, 0"/>
		<TextBlock Text="Lieblingsfarbe: " Grid.Row="4" Margin="0, 5, 0, 0"/>
		<ComboBox Grid.Row="4" Grid.Column="1" Margin="0, 5, 0, 0">
			<ComboBoxItem Content="Rot" Foreground="Red"/>
			<ComboBoxItem Content="Grün" Foreground="Green"/>
			<ComboBoxItem Content="Blau" Foreground="Blue"/>
			<ComboBoxItem Content="Gelb" Foreground="Yellow"/>
		</ComboBox>
		<TextBlock Text="Geschlecht:" Grid.Row="5" Margin="0, 5, 0, 0"/>
		<StackPanel Orientation="Horizontal" Grid.Row="5" Grid.Column="1" Margin="0, 5, 0, 0">
			<RadioButton Content="M" GroupName="Gender"/>
			<RadioButton Content="W" GroupName="Gender"/>
			<RadioButton Content="D" GroupName="Gender"/>
		</StackPanel>
		<UniformGrid Columns="2" Grid.Row="6" Grid.ColumnSpan="2">
			<Button Content="OK" Margin="0, 5, 2.5, 0"/>
			<Button Content="Abbrechen" Grid.Row="6" Grid.Column="1" Margin="2.5, 5, 0, 0"/>
		</UniformGrid>
	</Grid>-->
	<StackPanel Margin="5, 0, 5, 5">
		<UniformGrid>
			<TextBlock Text="Vorname: "/>
			<TextBox Text="{valid:Validation Binding={Binding person.Vorname, UpdateSourceTrigger=PropertyChanged}, RuleCollection={StaticResource TextValidations}}"
					 Name="Vorname"/>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Nachname: "/>
			<TextBox Text="{valid:Validation Binding={Binding person.Nachname, UpdateSourceTrigger=PropertyChanged}, RuleCollection={StaticResource TextValidations}}"
					 Name="Nachname"/>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Geburtsdatum: "/>
			<DatePicker SelectedDate="{valid:Validation Binding={Binding person.GebDat}, Rule={StaticResource DateValid}}"
						Validation.ErrorTemplate="{StaticResource ErrorTemp}"
						Name="GebDat"/>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Verheiratet: "/>
			<CheckBox IsChecked="{Binding person.Verheiratet}"/>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Lieblingsfarbe: "/>
			<!--<ComboBox SelectedValue="{Binding person.Lieblingsfarbe}"
					  SelectedValuePath="Name"
					  ItemsSource="{Binding Source={StaticResource Odp_ColorsProperties}}">
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<Rectangle Width="20"
									   Height="20"
									   Stroke="Black"
									   StrokeThickness="2"
									   Margin="0, 0, 5, 0"
									   Fill="{Binding Name}"/>
							<TextBlock Text="{Binding Name}"/>
						</StackPanel>
					</DataTemplate>
				</ComboBox.ItemTemplate>
			</ComboBox>-->
			<ComboBox ItemsSource="{local:Colors}"
					  SelectedValue="{valid:Validation Binding={Binding person.Lieblingsfarbe}, Rule={StaticResource ColorValid}}"
					  SelectedValuePath="Farbe"
					  Validation.ErrorTemplate="{StaticResource ErrorTemp}"
					  Name="Farbe">
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<Rectangle Width="20"
									   Height="20"
									   Stroke="Black"
									   StrokeThickness="2"
									   Margin="0, 0, 5, 0"
									   Fill="{Binding Brush}"/>
							<TextBlock Text="{Binding Name}"/>
						</StackPanel>
					</DataTemplate>
				</ComboBox.ItemTemplate>
			</ComboBox>
			<TextBlock/>
			<CheckBox Content="ColorPicker" Name="Picker"/>
		</UniformGrid>
		<local:ColorPickerUC SelectedColor="{Binding Path=person.Lieblingsfarbe, Mode=TwoWay}">
			<local:ColorPickerUC.Style>
				<Style TargetType="local:ColorPickerUC">
					<Setter Property="Visibility" Value="Collapsed"/>
					<Style.Triggers>
						<DataTrigger Binding="{Binding ElementName=Picker, Path=IsChecked}" Value="True">
							<Setter Property="Visibility" Value="Visible"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</local:ColorPickerUC.Style>
		</local:ColorPickerUC>
		<UniformGrid>
			<TextBlock Text="Geschlecht:"/>
			<StackPanel Orientation="Horizontal">
				<RadioButton Content="M" GroupName="Gender" IsChecked="{Binding person.Geschlecht, Converter={StaticResource GC}, ConverterParameter={x:Static local:Geschlecht.M}}"/>
				<RadioButton Content="W" GroupName="Gender" IsChecked="{Binding person.Geschlecht, Converter={StaticResource GC}, ConverterParameter={x:Static local:Geschlecht.W}}"/>
				<RadioButton Content="D" GroupName="Gender" IsChecked="{Binding person.Geschlecht, Converter={StaticResource GC}, ConverterParameter={x:Static local:Geschlecht.D}}"/>
			</StackPanel>
		</UniformGrid>
		<UniformGrid Margin="0">
			<Button Content="Abbrechen" Margin="0, 5, 2.5, 0"/>
			<Button Content="OK" Margin="2.5, 5, 0, 0" Click="PersonAnzeigen">
				<Button.Style>
					<Style TargetType="Button">
						<Setter Property="IsEnabled" Value="False"/>
						<Style.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding ElementName=Vorname, Path=(Validation.HasError)}" Value="False"/>
									<Condition Binding="{Binding ElementName=Nachname, Path=(Validation.HasError)}" Value="False"/>
									<Condition Binding="{Binding ElementName=GebDat, Path=(Validation.HasError)}" Value="False"/>
									<!--<Condition Binding="{Binding ElementName=Farbe, Path=(Validation.HasError)}" Value="False"/>-->
								</MultiDataTrigger.Conditions>
								<Setter Property="IsEnabled" Value="True"/>
							</MultiDataTrigger>
						</Style.Triggers>
					</Style>
				</Button.Style>
			</Button>
		</UniformGrid>
	</StackPanel>
</Window>
