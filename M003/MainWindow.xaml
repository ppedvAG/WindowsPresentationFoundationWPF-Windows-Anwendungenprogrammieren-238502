<Window x:Class="M003.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:M003"
        Title="MainWindow"
		Height="1000"
		Width="300"
		Topmost="True"
		MinHeight="200"
		MinWidth="300"
		WindowStartupLocation="CenterScreen">
	<StackPanel Margin="5 0 5 5">
		<Button Content="Width/Height"
				Width="200"
				MinHeight="50"/>

		<!--Margin & Padding-->
		<!--Margin: Außenabstand, Padding: Innenabstand-->
		<!--Links, Oben, Rechts, Unten-->
		<Button Content="Margin"
				Margin="10, 30, 50, 0"
				Padding="50, 0, 0, 0"/>

		<!--Alignment-->
		<!--HorizontalAlignment, VerticalAlignment-->
		<Button Content="Alignment"
				HorizontalAlignment="Right"/>
		<Button Content="Alignment"
				HorizontalAlignment="Center"/>
		<Button Content="Alignment"
				HorizontalAlignment="Left"/>
		<Button Content="Alignment"
				HorizontalAlignment="Stretch"/>

		<!--StackPanel-->
		<!--Stapelt Komponenten Vertikal oder Horizontal-->
		<!--Alternative: WrapPanel-->
		<StackPanel Orientation="Horizontal">
			<Button Content="StackPanelHorizontal"/>
			<Button Content="StackPanelHorizontal"/>
			<Button Content="StackPanelHorizontal"/>
			<Button Content="StackPanelHorizontal"/>
		</StackPanel>

		<!--DockPanel-->
		<!--Legt Elemente an den 4 Rändern an-->
		<!--WICHTIG: Reihenfolge der Elemente bestimmt das Streckverhalten der einzelnen Elemente-->
		<DockPanel>
			<Button Content="Top" DockPanel.Dock="Top"/>
			<Button Content="Bottom" DockPanel.Dock="Bottom"/>
			<Button Content="Left" DockPanel.Dock="Left"/>
			<Button Content="Right" DockPanel.Dock="Right"/>
			<TextBlock Text="Center" FontSize="40" TextAlignment="Center"/>
		</DockPanel>

		<!--Grid-->
		<!--Legt Komponenten anhand von Zeilen und Spalten an-->
		<!--Benötigt Row-/Columndefinitions-->
		<!--Jede Row-/Columndefinition kann auch eine Höhe/Breite haben-->
		<Grid Height="100">
			<Grid.RowDefinitions>
				<!--*: Passe die Höhe dieser Row/Column auf den Gesamtplatz an-->
				<!--Alle Höhen/Breiten mit einem * müssen zusammenaddiert werden und dann muss der Gesamtplatz durch die Anzahl geteilt werden-->
				<!--Der Quotient dieser Division wird mit den Nummern neben den Sternen multipliziert-->
				<RowDefinition Height="3*"/>
				<RowDefinition Height="2*"/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="150"/>
				<ColumnDefinition Width="Auto"/>
				<!--Width=Auto: Breitet die Spalte so weit aus, bis die breiteste Komponente Platz hat-->
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>

			<TextBlock Grid.Row="0"
					   Grid.Column="0"
					   Text="Hallo"/>
			<TextBlock Grid.Row="0"
					   Grid.Column="1"
					   Text="Hallo"/>
			<TextBlock Grid.Row="1"
					   Grid.Column="0"
					   Text="Hallo"/>
			<Button Content="Test"
					Grid.Row="1"
					Grid.RowSpan="2"
					Grid.Column="1"
					Grid.ColumnSpan="2"/>
		</Grid>

		<!--UniformGrid-->
		<!--Bekommt Rows und Columns und positioniert Elemente automatisch-->
		<UniformGrid Columns="3" Rows="3">
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
		</UniformGrid>
		<UniformGrid Columns="3" Visibility="Collapsed">
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
		</UniformGrid>
		<UniformGrid Rows="3" Visibility="Collapsed">
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
			<Button Content="Test"/>
		</UniformGrid>

		<!--ViewBox-->
		<!--Skaliert Inhalt anhand der Fenstergröße mit-->
		<Viewbox>
			<TextBlock Text="Hallo"/>
		</Viewbox>

		<!--Border-->
		<!--Umgibt ein oder mehrere Elemente mit einem Rahmen-->
		<!--Wenn die Border mehrere Elemente haben soll, muss ein Layoutcontainer verwendet werden-->
		<Border BorderBrush="Aqua" BorderThickness="2" HorizontalAlignment="Left">
			<TextBlock Text="Hallo Welt!"/>
		</Border>
		<Border BorderBrush="Orange" BorderThickness="2">
			<UniformGrid Rows="1">
				<Button Content="Test"/>
				<Button Content="Test"/>
				<Button Content="Test"/>
			</UniformGrid>
		</Border>

		<!--ScrollViewer-->
		<!--Ermöglicht, den Inhalt zu scrollen-->
		<!--WICHTIG: Benötigt eine fixe Höhe oder eine Oberkomponente, welche nicht eine unendliche Höhe ermöglicht-->
		<ScrollViewer Height="200"
					  VerticalScrollBarVisibility="Auto">
			<TextBlock Text="Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet."
					   TextWrapping="Wrap"/>
		</ScrollViewer>
	</StackPanel>
</Window>