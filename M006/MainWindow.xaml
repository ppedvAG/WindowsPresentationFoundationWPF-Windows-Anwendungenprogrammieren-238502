<Window x:Class="M006.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        xmlns:local="clr-namespace:M006"
        Title="MainWindow" Height="450" Width="800"
		DataContext="{Binding RelativeSource={RelativeSource Self}}"
		WindowStartupLocation="CenterScreen"
		Topmost="True"
		Background="{StaticResource GlobalBackground}">
	<Window.Resources>
		<sys:Int32 x:Key="EineZahl">40</sys:Int32>
		<sys:Double x:Key="EinDouble">24</sys:Double>
		<Thickness x:Key="EinMargin" Left="10" Top="20" Right="30" Bottom="40"/>

		<Style TargetType="Button" x:Key="DefaultButtonStyle">
			<Setter Property="FontSize" Value="30"/>
			<Setter Property="Content" Value="Hallo"/>
			<!--Komplexer Setter-->
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush>
						<GradientStop Color="Yellow" Offset="0"/>
						<GradientStop Color="Aqua" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Globaler Style für alle ProgressBars-->
		<Style TargetType="ProgressBar">
			<Setter Property="Foreground" Value="Violet"/>
			<Setter Property="IsIndeterminate" Value="True"/>
			<Setter Property="Height" Value="25"/>
		</Style>
	</Window.Resources>
	<StackPanel>
		<!--Resources-->
		<!--Objekte, welche im XAML abgelegt und eingebunden werden können-->
		<Button Content="{StaticResource EineZahl}"
				FontSize="{StaticResource EinDouble}"
				Margin="{StaticResource EinMargin}"/>

		<!--StaticResource lädt den Wert beim Initialisieren der UI Komponente (keine Updates)-->
		<!--DynamicResource lädt den Wert bei Änderung der Resource-->
		<!--x:Static um statische Werte anzusprechen und einzubinden-->
		<Button Content="{StaticResource EineZahl}"
				FontSize="{DynamicResource EinDouble}"
				Margin="{StaticResource EinMargin}"/>
		<Slider Value="{Binding Resources[EinDouble]}"
				Minimum="10" Maximum="50"/>
		<TextBlock Text="{x:Static local:MainWindow.Test}"/>
		<DatePicker SelectedDate="{x:Static sys:DateTime.Now}"/>

		<!--ResourceDictionaries-->
		<!--Resourcen in externen Dateien anlegen und über App.xaml einbinden-->

		<!--Style-->
		<!--Allgemeines Objekt, welches beliebige Eigenschaften einer Komponente verändern können-->
		<!--Werden angelegt über Komponente.Style-->
		<!--Verwendung: Portierbarkeit von Eigenschaften (Style als Resource anlegen und einbinden)-->
		<Button>
			<Button.Style>
				<!--WICHTIG: TargetType definieren-->
				<Style TargetType="Button">
					<Setter Property="FontSize" Value="30"/>
					<Setter Property="Content" Value="Hallo"/>
					<!--Komplexer Setter-->
					<Setter Property="Background">
						<Setter.Value>
							<LinearGradientBrush>
								<GradientStop Color="Yellow" Offset="0"/>
								<GradientStop Color="Aqua" Offset="1"/>
							</LinearGradientBrush>
						</Setter.Value>
					</Setter>
				</Style>
			</Button.Style>
		</Button>
		<Button Style="{StaticResource DefaultButtonStyle}"/>
		<Button Style="{StaticResource DefaultButtonStyle}"/>
		<Button Style="{StaticResource DefaultButtonStyle}"/>

		<!--Style ohne Key ist global (in allen (Unter-)Komponenten in denen der Style als Resource angelegt ist)-->
		<ProgressBar/>
		<ProgressBar/>
		<ProgressBar Height="50"/>
		<!--Styles überschreiben durch einfaches Setzen von Eigenschaften-->
	</StackPanel>
</Window>